// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String     @id @default(uuid()) @db.Char(36)
  name       String     @db.VarChar(255)
  email      String     @unique @db.VarChar(255)
  password   String     @db.VarChar(255)
  created_at DateTime   @default(now()) @map("created_at")
  themes     Theme[]
  categories Category[]
}

model Theme {
  id             String         @id @default(uuid()) @db.Char(36)
  theme          String         @db.VarChar(255)
  category       String         @db.VarChar(255)
  priority       Int            @default(2) @db.SmallInt // 1: Low, 2: Middle, 3: High
  platform       Int            @default(1) @db.SmallInt // 1: Note, 2: Youtube, 3: Twitter, 4: Tiktok, 5: Qiita, 6: Zenn, 7: Other
  created_at     DateTime       @default(now()) @map("created_at")
  user           User           @relation(fields: [user_id], references: [id])
  user_id        String         @db.Char(36)
  post_templates PostTemplate[]
}

model Category {
  id         String   @id @default(uuid()) @db.Char(36)
  name       String   @db.VarChar(255)
  created_at DateTime @default(now()) @map("created_at")
  user       User     @relation(fields: [user_id], references: [id])
  user_id    String   @db.Char(36)
}

model PostTemplate {
  id            String     @id @default(uuid()) @db.Char(36)
  content       String     @db.VarChar(255)
  is_registered Boolean    @default(false)
  created_at    DateTime   @default(now()) @map("created_at")
  theme         Theme      @relation(fields: [theme_id], references: [id])
  theme_id      String     @db.Char(36)
  messages      Message[]
  feedbacks     Feedback[]
}

model Message {
  id               String       @id @default(uuid()) @db.Char(36)
  content          String       @db.VarChar(255)
  is_ai            Boolean      @default(false)
  created_at       DateTime     @default(now()) @map("created_at")
  post_template    PostTemplate @relation(fields: [post_template_id], references: [id])
  post_template_id String       @db.Char(36)
}

model Feedback {
  id               String       @id @default(uuid()) @db.Char(36)
  content          String       @db.VarChar(255)
  created_at       DateTime     @default(now()) @map("created_at")
  post_template    PostTemplate @relation(fields: [post_template_id], references: [id])
  post_template_id String       @db.Char(36)
}
